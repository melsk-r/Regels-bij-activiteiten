/*
 * Regels bij activiteiten
 *
 * <body><p>Deze API maakt het mogelijk om gegevens op te vragen, bij een applicatie die invulling geeft aan de Omgevingswetbeleidcomponent, ook wel aangeduid als plansoftware, over (Omgevingswet-)activiteiten en/of (bijbehorende) juridische regels, regelteksten en locaties.</p></body>
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: robert.melskens@vng.nl
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// RegeltekstLinks
    /// </summary>
    [DataContract]
    public partial class RegeltekstLinks :  IEquatable<RegeltekstLinks>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RegeltekstLinks" /> class.
        /// </summary>
        /// <param name="self">self.</param>
        /// <param name="gerelateerdeRegelteksten">&lt;body&gt;&lt;p&gt;Verwijzing dat aangeeft dat er een bijzondere relatie bestaat tussen twee Regelteksten.&lt;/p&gt;&lt;/body&gt;.</param>
        /// <param name="locaties">&lt;body&gt;&lt;p&gt;Het werkingsgebied c.q. de locatie begrenst de juridische werking van de regeltekst, in juridische zin, te weten dat deze regeltekst alleen binnen dit werkingsgebied juridische werkingskracht heeft. Het werkingsgebied van de regeltekst is altijd aanwezig. Deze is dekkend voor de locaties/gebieden die in de regeltekst zijn genoemd. Deze locaties/gebieden worden genoemd in regels die gaan over een activiteit, functie, omgevingsnorm, omgevingswaarde of beperkingengebied. Het werkingsgebied van de regeltekst is maximaal het grondgebied van het bevoegde gezag zelf.&lt;/p&gt;&lt;/body&gt;&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt;.</param>
        public RegeltekstLinks(HalLink self = default(HalLink), List<HalLink> gerelateerdeRegelteksten = default(List<HalLink>), List<HalLink> locaties = default(List<HalLink>))
        {
            this.Self = self;
            this.GerelateerdeRegelteksten = gerelateerdeRegelteksten;
            this.Locaties = locaties;
        }

        /// <summary>
        /// Gets or Sets Self
        /// </summary>
        [DataMember(Name="self", EmitDefaultValue=false)]
        public HalLink Self { get; set; }

        /// <summary>
        /// &lt;body&gt;&lt;p&gt;Verwijzing dat aangeeft dat er een bijzondere relatie bestaat tussen twee Regelteksten.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <value>&lt;body&gt;&lt;p&gt;Verwijzing dat aangeeft dat er een bijzondere relatie bestaat tussen twee Regelteksten.&lt;/p&gt;&lt;/body&gt;</value>
        [DataMember(Name="gerelateerdeRegelteksten", EmitDefaultValue=false)]
        public List<HalLink> GerelateerdeRegelteksten { get; set; }

        /// <summary>
        /// &lt;body&gt;&lt;p&gt;Het werkingsgebied c.q. de locatie begrenst de juridische werking van de regeltekst, in juridische zin, te weten dat deze regeltekst alleen binnen dit werkingsgebied juridische werkingskracht heeft. Het werkingsgebied van de regeltekst is altijd aanwezig. Deze is dekkend voor de locaties/gebieden die in de regeltekst zijn genoemd. Deze locaties/gebieden worden genoemd in regels die gaan over een activiteit, functie, omgevingsnorm, omgevingswaarde of beperkingengebied. Het werkingsgebied van de regeltekst is maximaal het grondgebied van het bevoegde gezag zelf.&lt;/p&gt;&lt;/body&gt;&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <value>&lt;body&gt;&lt;p&gt;Het werkingsgebied c.q. de locatie begrenst de juridische werking van de regeltekst, in juridische zin, te weten dat deze regeltekst alleen binnen dit werkingsgebied juridische werkingskracht heeft. Het werkingsgebied van de regeltekst is altijd aanwezig. Deze is dekkend voor de locaties/gebieden die in de regeltekst zijn genoemd. Deze locaties/gebieden worden genoemd in regels die gaan over een activiteit, functie, omgevingsnorm, omgevingswaarde of beperkingengebied. Het werkingsgebied van de regeltekst is maximaal het grondgebied van het bevoegde gezag zelf.&lt;/p&gt;&lt;/body&gt;&lt;body&gt;&lt;p&gt;Een inhoudelijke toelichting op de toepassing van het informatie-element.&lt;/p&gt;&lt;/body&gt;</value>
        [DataMember(Name="locaties", EmitDefaultValue=false)]
        public List<HalLink> Locaties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RegeltekstLinks {\n");
            sb.Append("  Self: ").Append(Self).Append("\n");
            sb.Append("  GerelateerdeRegelteksten: ").Append(GerelateerdeRegelteksten).Append("\n");
            sb.Append("  Locaties: ").Append(Locaties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RegeltekstLinks);
        }

        /// <summary>
        /// Returns true if RegeltekstLinks instances are equal
        /// </summary>
        /// <param name="input">Instance of RegeltekstLinks to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RegeltekstLinks input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Self == input.Self ||
                    (this.Self != null &&
                    this.Self.Equals(input.Self))
                ) && 
                (
                    this.GerelateerdeRegelteksten == input.GerelateerdeRegelteksten ||
                    this.GerelateerdeRegelteksten != null &&
                    input.GerelateerdeRegelteksten != null &&
                    this.GerelateerdeRegelteksten.SequenceEqual(input.GerelateerdeRegelteksten)
                ) && 
                (
                    this.Locaties == input.Locaties ||
                    this.Locaties != null &&
                    input.Locaties != null &&
                    this.Locaties.SequenceEqual(input.Locaties)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Self != null)
                    hashCode = hashCode * 59 + this.Self.GetHashCode();
                if (this.GerelateerdeRegelteksten != null)
                    hashCode = hashCode * 59 + this.GerelateerdeRegelteksten.GetHashCode();
                if (this.Locaties != null)
                    hashCode = hashCode * 59 + this.Locaties.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {

 
            yield break;
        }
    }

}
